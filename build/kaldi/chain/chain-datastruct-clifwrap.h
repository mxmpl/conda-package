//////////////////////////////////////////////////////////////////////
// This file was automatically generated by CLIF to run under Python 3
// Version 0.3
//////////////////////////////////////////////////////////////////////
// source: /pykaldi/kaldi/chain/chain-datastruct.clif

#include <memory>
#include "clif/python/optional.h"
#include "chain/chain-datastruct.h"
#include "clif/python/postconv.h"

namespace clif {

// CLIF use `::DenominatorGraphTransition` as DenominatorGraphTransition
bool Clif_PyObjAs(PyObject* input, ::DenominatorGraphTransition** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::DenominatorGraphTransition>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::DenominatorGraphTransition>* output);
bool Clif_PyObjAs(PyObject* input, ::DenominatorGraphTransition* output);
bool Clif_PyObjAs(PyObject* input, ::gtl::optional<::DenominatorGraphTransition>* output);
PyObject* Clif_PyObjFrom(::DenominatorGraphTransition*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::DenominatorGraphTransition>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::DenominatorGraphTransition>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::DenominatorGraphTransition&, py::PostConv);

}  // namespace clif

// CLIF init_module if (PyObject* m = PyImport_ImportModule("_chain_datastruct")) Py_DECREF(m);
// CLIF init_module else goto err;
