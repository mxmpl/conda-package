//////////////////////////////////////////////////////////////////////
// This file was automatically generated by CLIF to run under Python 3
// Version 0.3
//////////////////////////////////////////////////////////////////////
// source: /pykaldi/kaldi/online2/online-timing.clif

#include <memory>
#include "clif/python/optional.h"
#include "online2/online-timing.h"
#include "clif/python/postconv.h"

namespace kaldi {
using namespace ::clif;

// CLIF use `::kaldi::OnlineTimer` as OnlineTimer
bool Clif_PyObjAs(PyObject* input, ::kaldi::OnlineTimer** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::OnlineTimer>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::OnlineTimer>* output);
bool Clif_PyObjAs(PyObject* input, ::kaldi::OnlineTimer* output);
bool Clif_PyObjAs(PyObject* input, ::gtl::optional<::kaldi::OnlineTimer>* output);
PyObject* Clif_PyObjFrom(::kaldi::OnlineTimer*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::OnlineTimer>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::OnlineTimer>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::OnlineTimer&, py::PostConv);
// CLIF use `::kaldi::OnlineTimingStats` as OnlineTimingStats
bool Clif_PyObjAs(PyObject* input, ::kaldi::OnlineTimingStats** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::OnlineTimingStats>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::OnlineTimingStats>* output);
bool Clif_PyObjAs(PyObject* input, ::kaldi::OnlineTimingStats* output);
bool Clif_PyObjAs(PyObject* input, ::gtl::optional<::kaldi::OnlineTimingStats>* output);
PyObject* Clif_PyObjFrom(::kaldi::OnlineTimingStats*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::OnlineTimingStats>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::OnlineTimingStats>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::OnlineTimingStats&, py::PostConv);

}  // namespace kaldi

// CLIF init_module if (PyObject* m = PyImport_ImportModule("_online_timing")) Py_DECREF(m);
// CLIF init_module else goto err;
