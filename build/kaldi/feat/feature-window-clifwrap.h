//////////////////////////////////////////////////////////////////////
// This file was automatically generated by CLIF to run under Python 3
// Version 0.3
//////////////////////////////////////////////////////////////////////
// source: /pykaldi/kaldi/feat/feature-window.clif

#include <memory>
#include "clif/python/optional.h"
#include "feat/feature-window.h"
#include "clif/python/postconv.h"

namespace kaldi {
using namespace ::clif;

// CLIF use `::kaldi::FeatureWindowFunction` as FeatureWindowFunction
bool Clif_PyObjAs(PyObject* input, ::kaldi::FeatureWindowFunction** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::FeatureWindowFunction>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::FeatureWindowFunction>* output);
bool Clif_PyObjAs(PyObject* input, ::kaldi::FeatureWindowFunction* output);
bool Clif_PyObjAs(PyObject* input, ::gtl::optional<::kaldi::FeatureWindowFunction>* output);
PyObject* Clif_PyObjFrom(::kaldi::FeatureWindowFunction*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::FeatureWindowFunction>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::FeatureWindowFunction>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::FeatureWindowFunction&, py::PostConv);
// CLIF use `::kaldi::FrameExtractionOptions` as FrameExtractionOptions
bool Clif_PyObjAs(PyObject* input, ::kaldi::FrameExtractionOptions** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::FrameExtractionOptions>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::FrameExtractionOptions>* output);
bool Clif_PyObjAs(PyObject* input, ::kaldi::FrameExtractionOptions* output);
bool Clif_PyObjAs(PyObject* input, ::gtl::optional<::kaldi::FrameExtractionOptions>* output);
PyObject* Clif_PyObjFrom(::kaldi::FrameExtractionOptions*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::FrameExtractionOptions>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::FrameExtractionOptions>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::FrameExtractionOptions&, py::PostConv);

}  // namespace kaldi

// CLIF init_module if (PyObject* m = PyImport_ImportModule("_feature_window")) Py_DECREF(m);
// CLIF init_module else goto err;
