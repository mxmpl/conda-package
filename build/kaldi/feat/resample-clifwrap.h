//////////////////////////////////////////////////////////////////////
// This file was automatically generated by CLIF to run under Python 3
// Version 0.3
//////////////////////////////////////////////////////////////////////
// source: /pykaldi/kaldi/feat/resample.clif

#include <memory>
#include "clif/python/optional.h"
#include "feat/resample.h"
#include "clif/python/postconv.h"

namespace kaldi {
using namespace ::clif;

// CLIF use `::kaldi::ArbitraryResample` as ArbitraryResample
bool Clif_PyObjAs(PyObject* input, ::kaldi::ArbitraryResample** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::ArbitraryResample>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::ArbitraryResample>* output);
bool Clif_PyObjAs(PyObject* input, ::kaldi::ArbitraryResample* output);
bool Clif_PyObjAs(PyObject* input, ::gtl::optional<::kaldi::ArbitraryResample>* output);
PyObject* Clif_PyObjFrom(::kaldi::ArbitraryResample*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::ArbitraryResample>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::ArbitraryResample>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::ArbitraryResample&, py::PostConv);
// CLIF use `::kaldi::LinearResample` as LinearResample
bool Clif_PyObjAs(PyObject* input, ::kaldi::LinearResample** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::LinearResample>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::LinearResample>* output);
bool Clif_PyObjAs(PyObject* input, ::kaldi::LinearResample* output);
bool Clif_PyObjAs(PyObject* input, ::gtl::optional<::kaldi::LinearResample>* output);
PyObject* Clif_PyObjFrom(::kaldi::LinearResample*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::LinearResample>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::LinearResample>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::LinearResample&, py::PostConv);

}  // namespace kaldi

// CLIF init_module if (PyObject* m = PyImport_ImportModule("_resample")) Py_DECREF(m);
// CLIF init_module else goto err;
