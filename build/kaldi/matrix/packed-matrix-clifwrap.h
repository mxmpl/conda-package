//////////////////////////////////////////////////////////////////////
// This file was automatically generated by CLIF to run under Python 3
// Version 0.3
//////////////////////////////////////////////////////////////////////
// source: /pykaldi/kaldi/matrix/packed-matrix.clif

#include <memory>
#include "clif/python/optional.h"
#include "matrix/packed-matrix.h"
#include "clif/python/postconv.h"

namespace kaldi {
using namespace ::clif;

// CLIF use `::kaldi::PackedMatrix<double>` as DoublePackedMatrix
bool Clif_PyObjAs(PyObject* input, ::kaldi::PackedMatrix<double>** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::PackedMatrix<double>>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::PackedMatrix<double>>* output);
bool Clif_PyObjAs(PyObject* input, ::kaldi::PackedMatrix<double>* output);
bool Clif_PyObjAs(PyObject* input, ::gtl::optional<::kaldi::PackedMatrix<double>>* output);
PyObject* Clif_PyObjFrom(::kaldi::PackedMatrix<double>*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::PackedMatrix<double>>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::PackedMatrix<double>>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::PackedMatrix<double>&, py::PostConv);
// CLIF use `::kaldi::PackedMatrix<float>` as PackedMatrix
bool Clif_PyObjAs(PyObject* input, ::kaldi::PackedMatrix<float>** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::PackedMatrix<float>>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::PackedMatrix<float>>* output);
bool Clif_PyObjAs(PyObject* input, ::kaldi::PackedMatrix<float>* output);
bool Clif_PyObjAs(PyObject* input, ::gtl::optional<::kaldi::PackedMatrix<float>>* output);
PyObject* Clif_PyObjFrom(::kaldi::PackedMatrix<float>*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::PackedMatrix<float>>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::PackedMatrix<float>>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::PackedMatrix<float>&, py::PostConv);

}  // namespace kaldi

// CLIF init_module if (PyObject* m = PyImport_ImportModule("_packed_matrix")) Py_DECREF(m);
// CLIF init_module else goto err;
