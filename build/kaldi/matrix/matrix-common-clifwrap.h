//////////////////////////////////////////////////////////////////////
// This file was automatically generated by CLIF to run under Python 3
// Version 0.3
//////////////////////////////////////////////////////////////////////
// source: /pykaldi/kaldi/matrix/matrix-common.clif

#include <memory>
#include "clif/python/optional.h"
#include "matrix/matrix-common.h"
#include "clif/python/postconv.h"

namespace kaldi {
using namespace ::clif;

// CLIF use `::kaldi::MatrixResizeType` as MatrixResizeType
bool Clif_PyObjAs(PyObject* input, ::kaldi::MatrixResizeType* output);
PyObject* Clif_PyObjFrom(const ::kaldi::MatrixResizeType&, py::PostConv);
// CLIF use `::kaldi::MatrixStrideType` as MatrixStrideType
bool Clif_PyObjAs(PyObject* input, ::kaldi::MatrixStrideType* output);
PyObject* Clif_PyObjFrom(const ::kaldi::MatrixStrideType&, py::PostConv);
// CLIF use `::kaldi::MatrixTransposeType` as MatrixTransposeType
bool Clif_PyObjAs(PyObject* input, ::kaldi::MatrixTransposeType* output);
PyObject* Clif_PyObjFrom(const ::kaldi::MatrixTransposeType&, py::PostConv);
// CLIF use `::kaldi::SpCopyType` as SpCopyType
bool Clif_PyObjAs(PyObject* input, ::kaldi::SpCopyType* output);
PyObject* Clif_PyObjFrom(const ::kaldi::SpCopyType&, py::PostConv);

}  // namespace kaldi

// CLIF init_module if (PyObject* m = PyImport_ImportModule("_matrix_common")) Py_DECREF(m);
// CLIF init_module else goto err;
