//////////////////////////////////////////////////////////////////////
// This file was automatically generated by CLIF to run under Python 3
// Version 0.3
//////////////////////////////////////////////////////////////////////
// source: /pykaldi/kaldi/transform/fmllr-diag-gmm.clif

#include <memory>
#include "clif/python/optional.h"
#include "transform/fmllr-diag-gmm.h"
#include "clif/python/postconv.h"

namespace kaldi {
using namespace ::clif;

// CLIF use `::kaldi::FmllrDiagGmmAccs` as FmllrDiagGmmAccs
bool Clif_PyObjAs(PyObject* input, ::kaldi::FmllrDiagGmmAccs** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::FmllrDiagGmmAccs>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::FmllrDiagGmmAccs>* output);
bool Clif_PyObjAs(PyObject* input, ::kaldi::FmllrDiagGmmAccs* output);
bool Clif_PyObjAs(PyObject* input, ::gtl::optional<::kaldi::FmllrDiagGmmAccs>* output);
PyObject* Clif_PyObjFrom(::kaldi::FmllrDiagGmmAccs*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::FmllrDiagGmmAccs>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::FmllrDiagGmmAccs>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::FmllrDiagGmmAccs&, py::PostConv);
// CLIF use `::kaldi::FmllrOptions` as FmllrOptions
bool Clif_PyObjAs(PyObject* input, ::kaldi::FmllrOptions** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::FmllrOptions>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::FmllrOptions>* output);
bool Clif_PyObjAs(PyObject* input, ::kaldi::FmllrOptions* output);
bool Clif_PyObjAs(PyObject* input, ::gtl::optional<::kaldi::FmllrOptions>* output);
PyObject* Clif_PyObjFrom(::kaldi::FmllrOptions*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::FmllrOptions>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::FmllrOptions>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::FmllrOptions&, py::PostConv);

}  // namespace kaldi

// CLIF init_module if (PyObject* m = PyImport_ImportModule("_fmllr_diag_gmm")) Py_DECREF(m);
// CLIF init_module else goto err;
