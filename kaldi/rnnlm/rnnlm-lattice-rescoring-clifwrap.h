//////////////////////////////////////////////////////////////////////
// This file was automatically generated by CLIF to run under Python 3
// Version 0.3
//////////////////////////////////////////////////////////////////////
// source: /pykaldi/kaldi/rnnlm/rnnlm-lattice-rescoring.clif

#include <memory>
#include "clif/python/optional.h"
#include "rnnlm/rnnlm-lattice-rescoring.h"
#include "clif/python/postconv.h"

namespace kaldi { namespace rnnlm {
using namespace ::clif;

// CLIF use `::kaldi::rnnlm::KaldiRnnlmDeterministicFst` as KaldiRnnlmDeterministicFst
bool Clif_PyObjAs(PyObject* input, ::kaldi::rnnlm::KaldiRnnlmDeterministicFst** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::rnnlm::KaldiRnnlmDeterministicFst>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::rnnlm::KaldiRnnlmDeterministicFst>* output);
bool Clif_PyObjAs(PyObject* input, ::kaldi::rnnlm::KaldiRnnlmDeterministicFst* output);
bool Clif_PyObjAs(PyObject* input, ::gtl::optional<::kaldi::rnnlm::KaldiRnnlmDeterministicFst>* output);
PyObject* Clif_PyObjFrom(::kaldi::rnnlm::KaldiRnnlmDeterministicFst*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::rnnlm::KaldiRnnlmDeterministicFst>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::rnnlm::KaldiRnnlmDeterministicFst>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::rnnlm::KaldiRnnlmDeterministicFst&, py::PostConv);

} }  // namespace kaldi::rnnlm

// CLIF init_module if (PyObject* m = PyImport_ImportModule("_rnnlm_lattice_rescoring")) Py_DECREF(m);
// CLIF init_module else goto err;
