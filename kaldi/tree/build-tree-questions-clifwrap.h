//////////////////////////////////////////////////////////////////////
// This file was automatically generated by CLIF to run under Python 3
// Version 0.3
//////////////////////////////////////////////////////////////////////
// source: /pykaldi/kaldi/tree/build-tree-questions.clif

#include <memory>
#include "clif/python/optional.h"
#include "tree/build-tree-questions.h"
#include "clif/python/postconv.h"

namespace kaldi {
using namespace ::clif;

// CLIF use `::kaldi::AllKeysType` as AllKeysType
bool Clif_PyObjAs(PyObject* input, ::kaldi::AllKeysType* output);
PyObject* Clif_PyObjFrom(const ::kaldi::AllKeysType&, py::PostConv);
// CLIF use `::kaldi::Questions` as Questions
bool Clif_PyObjAs(PyObject* input, ::kaldi::Questions** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::Questions>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::Questions>* output);
PyObject* Clif_PyObjFrom(::kaldi::Questions*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::Questions>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::Questions>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::Questions*, py::PostConv) = delete;
PyObject* Clif_PyObjFrom(const ::kaldi::Questions&, py::PostConv) = delete;
// CLIF use `::kaldi::QuestionsForKey` as QuestionsForKey
bool Clif_PyObjAs(PyObject* input, ::kaldi::QuestionsForKey** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::QuestionsForKey>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::QuestionsForKey>* output);
bool Clif_PyObjAs(PyObject* input, ::kaldi::QuestionsForKey* output);
bool Clif_PyObjAs(PyObject* input, ::gtl::optional<::kaldi::QuestionsForKey>* output);
PyObject* Clif_PyObjFrom(::kaldi::QuestionsForKey*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::QuestionsForKey>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::QuestionsForKey>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::QuestionsForKey&, py::PostConv);

}  // namespace kaldi

// CLIF init_module if (PyObject* m = PyImport_ImportModule("_build_tree_questions")) Py_DECREF(m);
// CLIF init_module else goto err;
