//////////////////////////////////////////////////////////////////////
// This file was automatically generated by CLIF to run under Python 3
// Version 0.3
//////////////////////////////////////////////////////////////////////
// source: /pykaldi/kaldi/online2/online-nnet3-decoding.clif

#include <memory>
#include "clif/python/optional.h"
#include "online2/online-nnet3-decoding.h"
#include "clif/python/postconv.h"

namespace kaldi {
using namespace ::clif;

// CLIF use `::kaldi::SingleUtteranceNnet3Decoder` as SingleUtteranceNnet3Decoder
bool Clif_PyObjAs(PyObject* input, ::kaldi::SingleUtteranceNnet3Decoder** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::SingleUtteranceNnet3Decoder>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::SingleUtteranceNnet3Decoder>* output);
PyObject* Clif_PyObjFrom(::kaldi::SingleUtteranceNnet3Decoder*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::SingleUtteranceNnet3Decoder>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::SingleUtteranceNnet3Decoder>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::SingleUtteranceNnet3Decoder*, py::PostConv) = delete;
PyObject* Clif_PyObjFrom(const ::kaldi::SingleUtteranceNnet3Decoder&, py::PostConv) = delete;

}  // namespace kaldi

// CLIF init_module if (PyObject* m = PyImport_ImportModule("_online_nnet3_decoding")) Py_DECREF(m);
// CLIF init_module else goto err;
