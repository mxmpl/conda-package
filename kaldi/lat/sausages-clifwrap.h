//////////////////////////////////////////////////////////////////////
// This file was automatically generated by CLIF to run under Python 3
// Version 0.3
//////////////////////////////////////////////////////////////////////
// source: /pykaldi/kaldi/lat/sausages.clif

#include <memory>
#include "clif/python/optional.h"
#include "lat/sausages.h"
#include "clif/python/postconv.h"

namespace kaldi {
using namespace ::clif;

// CLIF use `::kaldi::MinimumBayesRisk` as MinimumBayesRisk
bool Clif_PyObjAs(PyObject* input, ::kaldi::MinimumBayesRisk** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::MinimumBayesRisk>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::MinimumBayesRisk>* output);
bool Clif_PyObjAs(PyObject* input, ::kaldi::MinimumBayesRisk* output);
bool Clif_PyObjAs(PyObject* input, ::gtl::optional<::kaldi::MinimumBayesRisk>* output);
PyObject* Clif_PyObjFrom(::kaldi::MinimumBayesRisk*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::MinimumBayesRisk>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::MinimumBayesRisk>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::MinimumBayesRisk&, py::PostConv);
// CLIF use `::kaldi::MinimumBayesRiskOptions` as MinimumBayesRiskOptions
bool Clif_PyObjAs(PyObject* input, ::kaldi::MinimumBayesRiskOptions** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::MinimumBayesRiskOptions>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::MinimumBayesRiskOptions>* output);
bool Clif_PyObjAs(PyObject* input, ::kaldi::MinimumBayesRiskOptions* output);
bool Clif_PyObjAs(PyObject* input, ::gtl::optional<::kaldi::MinimumBayesRiskOptions>* output);
PyObject* Clif_PyObjFrom(::kaldi::MinimumBayesRiskOptions*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::MinimumBayesRiskOptions>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::MinimumBayesRiskOptions>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::MinimumBayesRiskOptions&, py::PostConv);

}  // namespace kaldi

// CLIF init_module if (PyObject* m = PyImport_ImportModule("_sausages")) Py_DECREF(m);
// CLIF init_module else goto err;
