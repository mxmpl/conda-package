//////////////////////////////////////////////////////////////////////
// This file was automatically generated by CLIF to run under Python 3
// Version 0.3
//////////////////////////////////////////////////////////////////////
// source: /pykaldi/kaldi/feat/mel-computations.clif

#include <memory>
#include "clif/python/optional.h"
#include "feat/mel-computations.h"
#include "clif/python/postconv.h"

namespace kaldi {
using namespace ::clif;

// CLIF use `::kaldi::MelBanks` as MelBanks
bool Clif_PyObjAs(PyObject* input, ::kaldi::MelBanks** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::MelBanks>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::MelBanks>* output);
PyObject* Clif_PyObjFrom(::kaldi::MelBanks*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::MelBanks>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::MelBanks>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::MelBanks*, py::PostConv) = delete;
PyObject* Clif_PyObjFrom(const ::kaldi::MelBanks&, py::PostConv) = delete;
// CLIF use `::kaldi::MelBanksOptions` as MelBanksOptions
bool Clif_PyObjAs(PyObject* input, ::kaldi::MelBanksOptions** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::MelBanksOptions>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::MelBanksOptions>* output);
bool Clif_PyObjAs(PyObject* input, ::kaldi::MelBanksOptions* output);
bool Clif_PyObjAs(PyObject* input, ::gtl::optional<::kaldi::MelBanksOptions>* output);
PyObject* Clif_PyObjFrom(::kaldi::MelBanksOptions*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::MelBanksOptions>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::MelBanksOptions>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::MelBanksOptions&, py::PostConv);

}  // namespace kaldi

// CLIF init_module if (PyObject* m = PyImport_ImportModule("_mel_computations")) Py_DECREF(m);
// CLIF init_module else goto err;
