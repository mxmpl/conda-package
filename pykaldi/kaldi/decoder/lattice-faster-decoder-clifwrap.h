//////////////////////////////////////////////////////////////////////
// This file was automatically generated by CLIF to run under Python 3
// Version 0.3
//////////////////////////////////////////////////////////////////////
// source: /pykaldi/kaldi/decoder/lattice-faster-decoder.clif

#include <memory>
#include "clif/python/optional.h"
#include "decoder/lattice-faster-decoder.h"
#include "clif/python/postconv.h"

namespace kaldi {
using namespace ::clif;

// CLIF use `::kaldi::LatticeFasterDecoder` as LatticeFasterDecoder
bool Clif_PyObjAs(PyObject* input, ::kaldi::LatticeFasterDecoder** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::LatticeFasterDecoder>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::LatticeFasterDecoder>* output);
PyObject* Clif_PyObjFrom(::kaldi::LatticeFasterDecoder*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::LatticeFasterDecoder>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::LatticeFasterDecoder>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::LatticeFasterDecoder*, py::PostConv) = delete;
PyObject* Clif_PyObjFrom(const ::kaldi::LatticeFasterDecoder&, py::PostConv) = delete;
// CLIF use `::kaldi::LatticeFasterDecoderConfig` as LatticeFasterDecoderOptions
bool Clif_PyObjAs(PyObject* input, ::kaldi::LatticeFasterDecoderConfig** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::LatticeFasterDecoderConfig>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::LatticeFasterDecoderConfig>* output);
bool Clif_PyObjAs(PyObject* input, ::kaldi::LatticeFasterDecoderConfig* output);
bool Clif_PyObjAs(PyObject* input, ::gtl::optional<::kaldi::LatticeFasterDecoderConfig>* output);
PyObject* Clif_PyObjFrom(::kaldi::LatticeFasterDecoderConfig*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::LatticeFasterDecoderConfig>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::LatticeFasterDecoderConfig>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::LatticeFasterDecoderConfig&, py::PostConv);

}  // namespace kaldi

// CLIF init_module if (PyObject* m = PyImport_ImportModule("_lattice_faster_decoder")) Py_DECREF(m);
// CLIF init_module else goto err;
