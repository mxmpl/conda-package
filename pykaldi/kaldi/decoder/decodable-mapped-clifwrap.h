//////////////////////////////////////////////////////////////////////
// This file was automatically generated by CLIF to run under Python 3
// Version 0.3
//////////////////////////////////////////////////////////////////////
// source: /pykaldi/kaldi/decoder/decodable-mapped.clif

#include <memory>
#include "clif/python/optional.h"
#include "decoder/decodable-mapped.h"
#include "clif/python/postconv.h"

namespace kaldi {
using namespace ::clif;

// CLIF use `::kaldi::DecodableMapped` as DecodableMapped
bool Clif_PyObjAs(PyObject* input, ::kaldi::DecodableMapped** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::DecodableMapped>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::DecodableMapped>* output);
PyObject* Clif_PyObjFrom(::kaldi::DecodableMapped*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::DecodableMapped>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::DecodableMapped>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::DecodableMapped*, py::PostConv) = delete;
PyObject* Clif_PyObjFrom(const ::kaldi::DecodableMapped&, py::PostConv) = delete;

}  // namespace kaldi

// CLIF init_module if (PyObject* m = PyImport_ImportModule("_decodable_mapped")) Py_DECREF(m);
// CLIF init_module else goto err;
