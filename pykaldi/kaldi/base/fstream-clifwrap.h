//////////////////////////////////////////////////////////////////////
// This file was automatically generated by CLIF to run under Python 3
// Version 0.3
//////////////////////////////////////////////////////////////////////
// source: /pykaldi/kaldi/base/fstream.clif

#include <memory>
#include "clif/python/optional.h"
#include "fstream"
#include "clif/python/postconv.h"

namespace std {
using namespace ::clif;

// CLIF use `::std::basic_ifstream<char, ::std::char_traits<char> >` as ifstream
bool Clif_PyObjAs(PyObject* input, ::std::basic_ifstream<char, ::std::char_traits<char> >** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::std::basic_ifstream<char, ::std::char_traits<char> >>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::std::basic_ifstream<char, ::std::char_traits<char> >>* output);
PyObject* Clif_PyObjFrom(::std::basic_ifstream<char, ::std::char_traits<char> >*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::std::basic_ifstream<char, ::std::char_traits<char> >>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::std::basic_ifstream<char, ::std::char_traits<char> >>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::std::basic_ifstream<char, ::std::char_traits<char> >*, py::PostConv) = delete;
PyObject* Clif_PyObjFrom(const ::std::basic_ifstream<char, ::std::char_traits<char> >&, py::PostConv) = delete;
// CLIF use `::std::basic_ofstream<char, ::std::char_traits<char> >` as ofstream
bool Clif_PyObjAs(PyObject* input, ::std::basic_ofstream<char, ::std::char_traits<char> >** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::std::basic_ofstream<char, ::std::char_traits<char> >>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::std::basic_ofstream<char, ::std::char_traits<char> >>* output);
PyObject* Clif_PyObjFrom(::std::basic_ofstream<char, ::std::char_traits<char> >*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::std::basic_ofstream<char, ::std::char_traits<char> >>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::std::basic_ofstream<char, ::std::char_traits<char> >>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::std::basic_ofstream<char, ::std::char_traits<char> >*, py::PostConv) = delete;
PyObject* Clif_PyObjFrom(const ::std::basic_ofstream<char, ::std::char_traits<char> >&, py::PostConv) = delete;

}  // namespace std

// CLIF init_module if (PyObject* m = PyImport_ImportModule("_fstream")) Py_DECREF(m);
// CLIF init_module else goto err;
