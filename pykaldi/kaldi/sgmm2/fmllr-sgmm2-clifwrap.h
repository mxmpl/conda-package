//////////////////////////////////////////////////////////////////////
// This file was automatically generated by CLIF to run under Python 3
// Version 0.3
//////////////////////////////////////////////////////////////////////
// source: /pykaldi/kaldi/sgmm2/fmllr-sgmm2.clif

#include <memory>
#include "clif/python/optional.h"
#include "sgmm2/fmllr-sgmm2.h"
#include "clif/python/postconv.h"

namespace kaldi {
using namespace ::clif;

// CLIF use `::kaldi::FmllrSgmm2Accs` as FmllrSgmm2Accs
bool Clif_PyObjAs(PyObject* input, ::kaldi::FmllrSgmm2Accs** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::FmllrSgmm2Accs>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::FmllrSgmm2Accs>* output);
PyObject* Clif_PyObjFrom(::kaldi::FmllrSgmm2Accs*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::FmllrSgmm2Accs>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::FmllrSgmm2Accs>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::FmllrSgmm2Accs*, py::PostConv) = delete;
PyObject* Clif_PyObjFrom(const ::kaldi::FmllrSgmm2Accs&, py::PostConv) = delete;
// CLIF use `::kaldi::Sgmm2FmllrConfig` as Sgmm2FmllrConfig
bool Clif_PyObjAs(PyObject* input, ::kaldi::Sgmm2FmllrConfig** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::Sgmm2FmllrConfig>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::Sgmm2FmllrConfig>* output);
bool Clif_PyObjAs(PyObject* input, ::kaldi::Sgmm2FmllrConfig* output);
bool Clif_PyObjAs(PyObject* input, ::gtl::optional<::kaldi::Sgmm2FmllrConfig>* output);
PyObject* Clif_PyObjFrom(::kaldi::Sgmm2FmllrConfig*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::Sgmm2FmllrConfig>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::Sgmm2FmllrConfig>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::Sgmm2FmllrConfig&, py::PostConv);
// CLIF use `::kaldi::Sgmm2FmllrGlobalParams` as Sgmm2FmllrGlobalParams
bool Clif_PyObjAs(PyObject* input, ::kaldi::Sgmm2FmllrGlobalParams** output);
bool Clif_PyObjAs(PyObject* input, std::shared_ptr<::kaldi::Sgmm2FmllrGlobalParams>* output);
bool Clif_PyObjAs(PyObject* input, std::unique_ptr<::kaldi::Sgmm2FmllrGlobalParams>* output);
bool Clif_PyObjAs(PyObject* input, ::kaldi::Sgmm2FmllrGlobalParams* output);
bool Clif_PyObjAs(PyObject* input, ::gtl::optional<::kaldi::Sgmm2FmllrGlobalParams>* output);
PyObject* Clif_PyObjFrom(::kaldi::Sgmm2FmllrGlobalParams*, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<::kaldi::Sgmm2FmllrGlobalParams>, py::PostConv);
PyObject* Clif_PyObjFrom(std::unique_ptr<::kaldi::Sgmm2FmllrGlobalParams>, py::PostConv);
PyObject* Clif_PyObjFrom(const ::kaldi::Sgmm2FmllrGlobalParams&, py::PostConv);

}  // namespace kaldi

// CLIF init_module if (PyObject* m = PyImport_ImportModule("_fmllr_sgmm2")) Py_DECREF(m);
// CLIF init_module else goto err;
